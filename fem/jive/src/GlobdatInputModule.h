/*
 *
 *  This module reads a mesh generated by Gmsh and stores it in globdat
 *  as NodeSet and ElementSet object.
 *
 *  The GroupInputModule is embedded for definition of NodeGroups and
 *  ElementGroups.
 *
 *  This Module does not define any constraints!
 *
 *  Frans van der Meer, August 2008 
 *  
 */

#ifndef GLOBDAT_INPUT_MODULE_H
#define GLOBDAT_INPUT_MODULE_H

#include <jem/util/Properties.h>
#include <jive/app/Module.h>
#include <jive/fem/XElementSet.h>
#include <jive/fem/XNodeSet.h>
#include <jive/util/Assignable.h>

using namespace jem;

using jem::util::Properties;
using jive::app::Module;
using jive::fem::XElementSet;
using jive::fem::XNodeSet;
using jive::util::Assignable;

typedef XElementSet         XElemSet;

//-----------------------------------------------------------------------
//   class GlobdatInputModule
//-----------------------------------------------------------------------

class GlobdatInputModule : public Module
{

 public:

  typedef GlobdatInputModule    Self;
  typedef Module             Super;

  static const char*        TYPE_NAME;

  explicit                  GlobdatInputModule

    ( const String&           name   = "globdatInput" );

  virtual Status            init

    ( const Properties&       conf,
      const Properties&       props,
      const Properties&       globdat );

  static Ref<Module>        makeNew

    ( const String&           name,
      const Properties&       conf,
      const Properties&       props,
      const Properties&       globdat );

 protected:

  virtual                  ~GlobdatInputModule  ();

 private:

  idx_t                    rank_;
  idx_t                    maxElemNodeCount_;
  idx_t                    numNodes_;
  idx_t                    numElems_;

  Assignable<XElemSet>     elems_;
  Assignable<XNodeSet>     nodes_;

 private:

  void                     configure_ 

    ( const Properties&       conf,
      const Properties&       props,
      const Properties&       globdat );

  void                     initSets_ 

    ( const Properties&       globdat );

  void                     readMesh_ 

    ( const Properties&       globdat );
};

#endif
